version: "3.7"
services:
  app:
    build:
      context: ./nginx-php-fpm
      dockerfile: Dockerfile
    ports:
      - "8888:80"
    environment:
      VIRTUAL_HOST: "app.test"
      VIRTUAL_PORT: "80"
      NGINX_PORT: 80
    volumes:
      - ./nginx-php-fpm/templates:/etc/nginx/templates
      - ${CODE_PATH}:/var/www/html
#      - ~/.ssh:/root/.ssh # can be useful for composer if you use private CVS
    external_links:
      - app:app.test

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "63792:6379"
    #command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - rediscache:/data  
  db:
    image: arm64v8/mysql:8.0.30
    container_name: app-db
    restart: unless-stopped
    ports: 
      - "33062:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
      - ./:/project_home
      - app_mysql:/var/lib/mysql
  
  # nginx-proxy:
  #   container_name: nginx-proxy
  #   image: jwilder/nginx-proxy:alpine
  #   environment:
  #     HTTPS_METHOD: "noredirect"
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #   restart: unless-stopped

  

volumes:
  app_mysql:
  rediscache:
    driver: local

networks:
  default:
    external:
      name: nginx-proxy
